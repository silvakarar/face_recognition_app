{"version":3,"sources":["components/Navigation/Navigation.jsx","components/Logo/Logo.jsx","components/ImageLinkForm/ImageLinkForm.jsx","components/FaceRecognition/FaceRecognition.jsx","components/SignIn/SignIn.jsx","components/Register/Register.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","marginRight","marginTop","onClick","className","Logo","options","max","height","width","alignItems","color","paddingTop","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageUrl","box","id","src","alt","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","htmlFor","name","value","Register","app","Clarifai","App","apiKey","parcticleOptions","particles","number","density","enable","value_area","props","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","this","params","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.50a5b0aa.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginRight: '1rem',\n          marginTop: '0',\n        }} >\n        <p\n          onClick={() => onRouteChange('signout')}\n          className=\"f3 link dim white underline pa3 pointer\">\n          Sign Out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n  <nav style={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            marginRight: '1rem',\n            marginTop: '0'}} >\n          <p\n            onClick={() => onRouteChange('signin')}\n            className=\"f3 link dim white underline pa3 pointer\">\n          Sign In\n          </p>\n          <p\n            onClick={() => onRouteChange('register')}\n            className=\"f3 link dim white underline pa3 pointer\">\n           Register\n          </p>\n        </nav>\n    \n    );\n  }\n};\n\nexport default Navigation;\n","import React from 'react';\nimport Tilt from 'react-tilt';\nimport { BiBrain } from 'react-icons/bi';\nimport './Logo.css';\n\nconst Logo = () => {\n  return (\n    <div className=\"ma2 mt0\">\n      <Tilt\n        className=\"Tilt br2 shadow-2 ml3\"\n        options={{ max: 55 }}\n        style={{ height: 150, width: 150 }}>\n        <div\n          className=\"Tilt-inner pa3\"\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}>\n          <BiBrain style={{ width: '100px', height: '100px', color: 'white', paddingTop: '5px'}} />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p className=\"f3 white center \">\n        {'This brain will detect faces in your pictures. Give it a try.'}\n      </p>\n      <div className=\"center\">\n        <div className=\"form center pa4 br3 shadow-5\">\n          <input\n            className=\"f4 pa2 w-70 mr1 ba b--near-white\"\n            type=\"text\"\n            onChange={onInputChange}\n          />\n          <button\n            className=\"w-30 grow f4 link ph3 pv2 dib silver bg-light-white ba b--near-white\"\n            onClick={onButtonSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className=\"center ma \">\n      <div className=\"absolute mt2\">\n        <img\n          id=\"inputImage\"\n          src={imageUrl}\n          alt=\"\"\n          width=\"auto\"\n          height=\"400px\"\n        />\n        <div\n          className=\"bounding-box\"\n          style={{\n            top: box.topRow,\n            right: box.rightCol,\n            bottom: box.bottomRow,\n            left: box.leftCol,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from 'react';\n\nconst SignIn = ({onRouteChange}) => {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       signInEmail: '',\n//       signInPassword: '',\n//     };\n//   }\n\n//   onEmailChange = event => {\n//     this.setState({ signInEmail: event.target.value });\n//   };\n\n//   onPasswordChange = event => {\n//     this.setState({ signInPassword: event.target.value });\n//   };\n\n//   onSubmitSignIn = () => {  \n//  this.state.signInEmail,\n//   this.state.signInPassword\n   \n//       .then(response => response.json())\n//       .then(user => {\n//         if (user.id) {\n//           this.props.loadUser(user)\n//           this.props.onRouteChange('home');\n//         }\n//       })\n//   };\n\n \n    // const { onRouteChange } = this.props;\n    return (\n      <article className=\"center br3 ba shadow-5 b--white-10 mv4 w-100 w-50-m w-25-l mw6 formColor\">\n        <main className=\"pa4 white-80 center\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 center\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"white b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  // onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"white b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib \"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  // onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"center\">\n              <input\n                onClick={() => onRouteChange('home')}\n                className=\" white b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib \"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3 center\">\n              <p\n                onClick={() => onRouteChange('register')}\n                className=\"f6 link dim white db pointer\">\n                Register\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n\n\nexport default SignIn;\n","import React from 'react';\n\nconst Register = ({ onRouteChange }) => {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     name: '',\n  //     email: '',\n  //     password: '',\n  //   };\n  // }\n  // onNameChange = event => {\n  //   this.setState({ name: event.target.value });\n  // };\n\n  // onEmailChange = event => {\n  //   this.setState({ email: event.target.value });\n  // };\n\n  // onPasswordChange = event => {\n  //   this.setState({ password: event.target.value });\n  // };\n\n  // onSubmitSignIn = () => {\n\n  //   // this.state.name,\n  //   //   this.state.email,\n  //   //   this.state.password,\n\n  //     this.props.onRouteChange('home');\n  // }\n\n  return (\n    <article className=\"center br3 ba shadow-5 b--white-10 mv4 w-100 w-50-m w-25-l mw6 \">\n      <main className=\"pa4 white-80 center\">\n        <form className=\"measure \">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 center\">Register</legend>\n            <div className=\"mt3 \">\n              <label className=\"db fw6 lh-copy f6 tc\" htmlFor=\"name\">\n                Name\n              </label>\n              <input\n                // onChange={this.onNameChange}\n                className=\"white b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib \"\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n              />\n            </div>\n            <div className=\"mt3 \">\n              <label className=\"db fw6 lh-copy f6 tc\" htmlFor=\"email-address\">\n                Email\n              </label>\n              <input\n                // onChange={this.onEmailChange}\n                className=\"white b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib \"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n              />\n            </div>\n            <div className=\"mv3 \">\n              <label className=\"db fw6 lh-copy f6 tc\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                // onChange={this.onPasswordChange}\n                className=\"white b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib \"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n              />\n            </div>\n          </fieldset>\n          <div className=\"center\">\n            <input\n              // onClick={this.onSubmitSignIn}\n              onClick={() => onRouteChange('home')}\n              className=\" white b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib \"\n              type=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n      </main>\n    </article>\n  );\n};\n\nexport default Register;\n","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n// import Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nimport './App.css';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\n\nconst app = new Clarifai.App({\n  apiKey: '8bcf180fb7d64efc8557ac8c1e2d942e',\n});\n\nconst parcticleOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n    };\n  }\n\n\n  calculateFaceLocation = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = box => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => this.displayFaceBox( this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n      \n  };\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true});\n    } \n    this.setState({route:  route});\n  };\n\n  render() {\n    const {  isSignedIn,  route, } = this.state;\n\n    return (\n      <div>\n        <Particles className=\"particles\" params={parcticleOptions} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === 'home' ? (\n          <div>\n            <Logo />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box} />\n          </div>\n        ) : route === 'signin' ? (\n          <SignIn  onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register       \n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}